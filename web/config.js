// Generated by CoffeeScript 1.7.1
(function() {
  var ca, displayFunction, filloutCallsignTable, filloutMetaTable, prep, setup;

  prep = function(x) {
    return x.replace(' ', '_SPACE_');
  };

  ca = function(x) {
    return $(x).addClass('clickable');
  };

  displayFunction = function(tag) {
    return function(x) {
      return $(tag).val($(x.toElement).text());
    };
  };

  filloutCallsignTable = function(json) {
    var callsign, cell, close, row, t, trackname, x, _results;
    if (json === void 0) {
      return $.getJSON('/tracks', filloutCallsignTable);
    } else {
      t = $('#associate-callsign-table');
      t.html('');
      _results = [];
      for (trackname in json) {
        row = $('<tr>');
        row.append(ca('<td>' + trackname + '</td>').click(displayFunction('#associate-callsign-trackname')));
        cell = $('<td>');
        for (x in json[trackname]) {
          callsign = json[trackname][x];
          close = ca('<span>x</span>').click(function(x) {
            return $.getJSON('/removecallsign/' + $(x.toElement).attr('info'), filloutCallsignTable);
          });
          close.attr('info', callsign + '/' + trackname);
          cell.append($('<div>' + callsign + ' (</div>').append(close).append(')'));
        }
        row.append(cell);
        _results.push(t.append(row));
      }
      return _results;
    }
  };

  filloutMetaTable = function(json) {
    var cell, key, row, t, trackname, _results;
    if (json === void 0) {
      return $.getJSON('/meta', filloutMetaTable);
    } else {
      t = $('#metadata-table');
      t.html('');
      _results = [];
      for (trackname in json) {
        row = $('<tr>');
        cell = $('<td></td>');
        for (key in json[trackname]) {
          cell.append(ca('<span>' + key + '</span>').click(displayFunction('#metadata-attribute')));
          cell.append(': ');
          cell.append(ca('<span>' + json[trackname][key] + '</span>').click(displayFunction('#metadata-value')));
          cell.append('<br>');
        }
        row.append(ca('<td>' + trackname + '</td>').click(displayFunction('#metadata-trackname')));
        row.append(cell);
        _results.push(t.append(row));
      }
      return _results;
    }
  };

  setup = function() {
    filloutCallsignTable();
    return filloutMetaTable();
  };

  $(document).ready(function() {
    setup();
    $('#associate-callsign-go').click(function() {
      var callsign, trackname;
      trackname = prep($('#associate-callsign-trackname').val());
      callsign = prep($('#associate-callsign-callsign').val());
      return $.getJSON('/addcallsign/' + callsign + '/' + trackname, filloutCallsignTable);
    });
    $('#metadata-go').click(function() {
      var attribute, data, trackname, value;
      trackname = $('#metadata-trackname').val();
      attribute = $('#metadata-attribute').val();
      value = $('#metadata-value').val();
      data = {
        'name': trackname
      };
      data[attribute] = value;
      return $.post('/put', data, function(dat) {
        return filloutMetaTable($.parseJSON(dat));
      });
    });
    $('#reset-all').click(function() {
      $.get('/reset');
      return setup();
    });
    return $('#clear-tracks').click(function() {
      return $.get('/clearpaths');
    });
  });

}).call(this);
